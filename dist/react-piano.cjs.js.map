{"version":3,"file":"react-piano.cjs.js","sources":["../src/MidiNumbers.js","../src/Key.js","../src/Keyboard.js","../src/ControlledPiano.js","../src/Piano.js","../src/KeyboardShortcuts.js"],"sourcesContent":["import range from 'just-range';\n\nconst SORTED_PITCHES = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst ACCIDENTAL_PITCHES = ['Db', 'Eb', 'Gb', 'Ab', 'Bb'];\nconst PITCH_INDEXES = {\n  C: 0,\n  'C#': 1,\n  Db: 1,\n  D: 2,\n  'D#': 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  'F#': 6,\n  Gb: 6,\n  G: 7,\n  'G#': 8,\n  Ab: 8,\n  A: 9,\n  'A#': 10,\n  Bb: 10,\n  B: 11,\n};\nconst MIDI_NUMBER_C0 = 12;\nconst MIN_MIDI_NUMBER = MIDI_NUMBER_C0;\nconst MAX_MIDI_NUMBER = 127;\nconst NOTE_REGEX = /([a-g])([#b]?)(\\d+)/;\nconst NOTES_IN_OCTAVE = 12;\n\n// Converts string notes in scientific pitch notation to a MIDI number, or null.\n//\n// Example: \"c#0\" => 13, \"eb5\" => 75, \"abc\" => null\n//\n// References:\n// - http://www.flutopedia.com/octave_notation.htm\n// - https://github.com/danigb/tonal/blob/master/packages/note/index.js\nfunction fromNote(note) {\n  if (!note) {\n    throw Error('Invalid note argument');\n  }\n  const match = NOTE_REGEX.exec(note.toLowerCase());\n  if (!match) {\n    throw Error('Invalid note argument');\n  }\n  const [, letter, accidental, octave] = match;\n  const pitchName = `${letter.toUpperCase()}${accidental}`;\n  const pitchIndex = PITCH_INDEXES[pitchName];\n  if (pitchIndex == null) {\n    throw Error('Invalid note argument');\n  }\n  return MIDI_NUMBER_C0 + pitchIndex + NOTES_IN_OCTAVE * parseInt(octave, 10);\n}\n\n//\n// Build cache for getAttributes\n//\nfunction buildMidiNumberAttributes(midiNumber) {\n  const pitchIndex = (midiNumber - MIDI_NUMBER_C0) % NOTES_IN_OCTAVE;\n  const octave = Math.floor((midiNumber - MIDI_NUMBER_C0) / NOTES_IN_OCTAVE);\n  const pitchName = SORTED_PITCHES[pitchIndex];\n  return {\n    note: `${pitchName}${octave}`,\n    pitchName,\n    octave,\n    midiNumber,\n    isAccidental: ACCIDENTAL_PITCHES.includes(pitchName),\n  };\n}\n\nfunction buildMidiNumberAttributesCache() {\n  return range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).reduce((cache, midiNumber) => {\n    cache[midiNumber] = buildMidiNumberAttributes(midiNumber);\n    return cache;\n  }, {});\n}\n\nconst midiNumberAttributesCache = buildMidiNumberAttributesCache();\n\n// Returns an object containing various attributes for a given MIDI number.\n// Throws error for invalid midiNumbers.\nfunction getAttributes(midiNumber) {\n  const attrs = midiNumberAttributesCache[midiNumber];\n  if (!attrs) {\n    throw Error('Invalid MIDI number');\n  }\n  return attrs;\n}\n\n// Returns all MIDI numbers corresponding to natural notes, e.g. C and not C# or Bb.\nconst NATURAL_MIDI_NUMBERS = range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).filter(\n  (midiNumber) => !getAttributes(midiNumber).isAccidental,\n);\n\nexport default {\n  fromNote,\n  getAttributes,\n  MIN_MIDI_NUMBER,\n  MAX_MIDI_NUMBER,\n  NATURAL_MIDI_NUMBERS,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport MidiNumbers from './MidiNumbers';\n\nclass Key extends React.Component {\n  static propTypes = {\n    midiNumber: PropTypes.number.isRequired,\n    naturalKeyWidth: PropTypes.number.isRequired, // Width as a ratio between 0 and 1\n    gliss: PropTypes.bool.isRequired,\n    useTouchEvents: PropTypes.bool.isRequired,\n    accidental: PropTypes.bool.isRequired,\n    active: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    accidentalWidthRatio: PropTypes.number.isRequired,\n    pitchPositions: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    exportLayout: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    accidentalWidthRatio: 0.65,\n    pitchPositions: {\n      C: 0,\n      Db: 0.55,\n      D: 1,\n      Eb: 1.8,\n      E: 2,\n      F: 3,\n      Gb: 3.5,\n      G: 4,\n      Ab: 4.7,\n      A: 5,\n      Bb: 5.85,\n      B: 6,\n    },\n  };\n\n  onPlayNoteInput = () => {\n    this.props.onPlayNoteInput(this.props.midiNumber);\n  };\n\n  onStopNoteInput = () => {\n    this.props.onStopNoteInput(this.props.midiNumber);\n  };\n\n  // Key position is represented by the number of natural key widths from the left\n  getAbsoluteKeyPosition(midiNumber) {\n    const OCTAVE_WIDTH = 7;\n    const { octave, pitchName } = MidiNumbers.getAttributes(midiNumber);\n    const pitchPosition = this.props.pitchPositions[pitchName];\n    const octavePosition = OCTAVE_WIDTH * octave;\n    return pitchPosition + octavePosition;\n  }\n\n  getRelativeKeyPosition(midiNumber) {\n    return (\n      this.getAbsoluteKeyPosition(midiNumber) -\n      this.getAbsoluteKeyPosition(this.props.noteRange.first)\n    );\n  }\n\n  getLayout() {\n    return this.layout;\n  }\n\n  render() {\n    const {\n      naturalKeyWidth,\n      accidentalWidthRatio,\n      midiNumber,\n      gliss,\n      useTouchEvents,\n      accidental,\n      active,\n      disabled,\n      children,\n    } = this.props;\n\n    const left = ratioToPercentage(this.getRelativeKeyPosition(midiNumber) * naturalKeyWidth);\n    const width = ratioToPercentage(accidental ? accidentalWidthRatio * naturalKeyWidth : naturalKeyWidth);\n\n    if (this.props.exportLayout) this.layout = { midiNumber, left, width };\n\n    // Need to conditionally include/exclude handlers based on useTouchEvents,\n    // because otherwise mobile taps double fire events.\n    return (\n      <div\n        className={classNames('ReactPiano__Key', {\n          'ReactPiano__Key--accidental': accidental,\n          'ReactPiano__Key--natural': !accidental,\n          'ReactPiano__Key--disabled': disabled,\n          'ReactPiano__Key--active': active,\n        })}\n        style={{ left: left, width: width }}\n        onMouseDown={useTouchEvents ? null : this.onPlayNoteInput}\n        onMouseUp={useTouchEvents ? null : this.onStopNoteInput}\n        onMouseEnter={gliss ? this.onPlayNoteInput : null}\n        onMouseLeave={this.onStopNoteInput}\n        onTouchStart={useTouchEvents ? this.onPlayNoteInput : null}\n        onTouchCancel={useTouchEvents ? this.onStopNoteInput : null}\n        onTouchEnd={useTouchEvents ? this.onStopNoteInput : null}\n      >\n        <div className=\"ReactPiano__NoteLabelContainer\">{children}</div>\n      </div>\n    );\n  }\n}\n\nfunction ratioToPercentage(ratio) {\n  return `${ratio * 100}%`;\n}\n\nexport default Key;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\n\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\n\nclass Keyboard extends React.Component {\n  static propTypes = {\n    noteRange: noteRangePropType,\n    activeNotes: PropTypes.arrayOf(PropTypes.number),\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    keyWidthToHeight: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    gliss: PropTypes.bool,\n    useTouchEvents: PropTypes.bool,\n    // If width is not provided, must have fixed width and height in parent container\n    width: PropTypes.number,\n    onLayoutChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    gliss: false,\n    useTouchEvents: false,\n    keyWidthToHeight: 0.33,\n    renderNoteLabel: () => { },\n  };\n\n  constructor(props) {\n    super(props);\n    this.updateMidiKeys();\n  }\n\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  getNaturalKeyCount() {\n    return this.getMidiNumbers().filter((number) => {\n      const { isAccidental } = MidiNumbers.getAttributes(number);\n      return !isAccidental;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    return 1 / this.getNaturalKeyCount();\n  }\n\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n\n  componentDidMount() {\n    if (!this.props.onLayoutChange) return;\n    this.resizeObserver = new ResizeObserver(this.measureKeys.bind(this)); // Sử dụng bind để giữ nguyên context\n    this.resizeObserver.observe(this.keyboardRef.current); // Bắt đầu lắng nghe sự kiện resize\n  }\n\n  componentWillUnmount() {\n    if (!this.resizeObserver) return;\n    this.resizeObserver.disconnect(); // Hủy lắng nghe sự kiện resize\n    delete this.resizeObserver;\n  }\n\n  componentDidUpdate(prevProps) {\n    // Cập nhật midiKeys và refs nếu noteRange thay đổi\n    if (prevProps.noteRange !== this.props.noteRange) this.updateMidiKeys();\n\n    if (this.props.onLayoutChange && !this.resizeObserver) {\n      // Kiểm tra xem có cần khởi tạo lại ResizeObserver không\n      this.resizeObserver = new ResizeObserver(this.measureKeys.bind(this)); // Sử dụng bind để giữ nguyên context\n      this.resizeObserver.observe(this.keyboardRef.current);\n    } else if (!this.props.onLayoutChange && this.resizeObserver) {\n      this.resizeObserver.disconnect(); // Hủy lắng nghe sự kiện resize\n      delete this.resizeObserver;\n    }\n  }\n\n  updateMidiKeys() {\n    const tempMidiKeys = this.getMidiNumbers(); // Cập nhật midiKeys\n\n    // Nếu midiKeys không thay đổi thì không cần cập nhật refs\n    const isChange = !arraysEqual(tempMidiKeys, this.midiKeys);\n    if (isChange) this.midiKeys = tempMidiKeys;\n\n    // Chỉ khởi tạo lại keyRefs và keyLayouts khi onLayoutChange không phải là null\n    if (this.props.onLayoutChange) {\n      if (this.keyboardRef == null) this.keyboardRef = React.createRef();\n      if (this.keyRefs == null) this.keyRefs = {}; // Khởi tạo refs\n\n      if (isChange) {\n        // Tạo refs cho từng midiKey\n        this.midiKeys.forEach(midiNumber => {\n          this.keyRefs[midiNumber] = React.createRef();\n        });\n      }\n    } else if (this.keyRefs) {\n      delete this.keyRefs;\n    }\n  }\n\n  measureKeys() {\n    const layouts = this.midiKeys.map((midiNumber) => {\n      const keyComponent = this.keyRefs[midiNumber];\n      if (keyComponent) return keyComponent.current.getLayout();\n      return null;\n    }).filter(layout => layout !== null);\n\n    if (this.props.onLayoutChange) this.props.onLayoutChange(layouts); // Gọi callback với layouts mới\n  }\n\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return (\n      <div\n        ref={this.keyboardRef}\n        className={classNames('ReactPiano__Keyboard', this.props.className)}\n        style={{ width: this.getWidth(), height: this.getHeight() }}\n      >\n        {this.midiKeys.map((midiNumber) => {\n          const { note, isAccidental } = MidiNumbers.getAttributes(midiNumber);\n          const isActive = !this.props.disabled && this.props.activeNotes.includes(midiNumber);\n          return (\n            <Key\n              ref={this.keyRefs != null ? this.keyRefs[midiNumber] : null} // Gán ref cho Key\n              naturalKeyWidth={naturalKeyWidth}\n              midiNumber={midiNumber}\n              noteRange={this.props.noteRange}\n              active={isActive}\n              accidental={isAccidental}\n              disabled={this.props.disabled}\n              onPlayNoteInput={this.props.onPlayNoteInput}\n              onStopNoteInput={this.props.onStopNoteInput}\n              gliss={this.props.gliss}\n              useTouchEvents={this.props.useTouchEvents}\n              key={midiNumber}\n              exportLayout={this.props.onLayoutChange != null}\n            >\n              {this.props.disabled\n                ? null\n                : this.props.renderNoteLabel({\n                  isActive,\n                  isAccidental,\n                  midiNumber,\n                })}\n            </Key>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction arraysEqual(arr1, arr2) {\n  if (arr1 == null || arr2 == null || arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  const { first, last } = props[propName];\n  if (!first || !last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`,\n    );\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`,\n    );\n  }\n  if (first >= last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`,\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport Keyboard from './Keyboard';\n\nclass ControlledPiano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n    onLayoutChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    renderNoteLabel: ({ keyboardShortcut, midiNumber, isActive, isAccidental }) =>\n      keyboardShortcut ? (\n        <div\n          className={classNames('ReactPiano__NoteLabel', {\n            'ReactPiano__NoteLabel--active': isActive,\n            'ReactPiano__NoteLabel--accidental': isAccidental,\n            'ReactPiano__NoteLabel--natural': !isAccidental,\n          })}\n        >\n          {keyboardShortcut}\n        </div>\n      ) : null,\n  };\n\n  state = {\n    isMouseDown: false,\n    useTouchEvents: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.activeNotes !== prevProps.activeNotes) {\n      this.handleNoteChanges({\n        prevActiveNotes: prevProps.activeNotes || [],\n        nextActiveNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  // This function is responsible for diff'ing activeNotes\n  // and playing or stopping notes accordingly.\n  handleNoteChanges = ({ prevActiveNotes, nextActiveNotes }) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const notesStopped = difference(prevActiveNotes, nextActiveNotes);\n    const notesStarted = difference(nextActiveNotes, prevActiveNotes);\n    notesStarted.forEach((midiNumber) => {\n      this.props.playNote(midiNumber);\n    });\n    notesStopped.forEach((midiNumber) => {\n      this.props.stopNote(midiNumber);\n    });\n  };\n\n  getMidiNumberForKey = (key) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.key === key);\n    return shortcut && shortcut.midiNumber;\n  };\n\n  getKeyForMidiNumber = (midiNumber) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.midiNumber === midiNumber);\n    return shortcut && shortcut.key;\n  };\n\n  onKeyDown = (event) => {\n    // Don't conflict with existing combinations like ctrl + t\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onPlayNoteInput(midiNumber);\n    }\n  };\n\n  onKeyUp = (event) => {\n    // This *should* also check for event.ctrlKey || event.metaKey || event.ShiftKey like onKeyDown does,\n    // but at least on Mac Chrome, when mashing down many alphanumeric keystrokes at once,\n    // ctrlKey is fired unexpectedly, which would cause onStopNote to NOT be fired, which causes problematic\n    // lingering notes. Since it's fairly safe to call onStopNote even when not necessary,\n    // the ctrl/meta/shift check is removed to fix that issue.\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onStopNoteInput(midiNumber);\n    }\n  };\n\n  onPlayNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onPlayNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onStopNoteInput = (midiNumber) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onStopNoteInput(midiNumber, this.props.activeNotes);\n  };\n\n  onMouseDown = () => {\n    this.setState({\n      isMouseDown: true,\n    });\n  };\n\n  onMouseUp = () => {\n    this.setState({\n      isMouseDown: false,\n    });\n  };\n\n  onTouchStart = () => {\n    this.setState({\n      useTouchEvents: true,\n    });\n  };\n\n  renderNoteLabel = ({ midiNumber, isActive, isAccidental }) => {\n    const keyboardShortcut = this.getKeyForMidiNumber(midiNumber);\n    return this.props.renderNoteLabel({ keyboardShortcut, midiNumber, isActive, isAccidental });\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: '100%', height: '100%' }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        data-testid=\"container\"\n      >\n        <Keyboard\n          noteRange={this.props.noteRange}\n          onPlayNoteInput={this.onPlayNoteInput}\n          onStopNoteInput={this.onStopNoteInput}\n          activeNotes={this.props.activeNotes}\n          className={this.props.className}\n          disabled={this.props.disabled}\n          width={this.props.width}\n          keyWidthToHeight={this.props.keyWidthToHeight}\n          gliss={this.state.isMouseDown}\n          useTouchEvents={this.state.useTouchEvents}\n          renderNoteLabel={this.renderNoteLabel}\n          onLayoutChange={this.props.onLayoutChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ControlledPiano;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import classNames from 'classnames';\n// import difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\n// import Keyboard from './Keyboard';\n\nclass Piano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(PropTypes.number.isRequired),\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func,\n    onStopNoteInput: PropTypes.func,\n    renderNoteLabel: PropTypes.func,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n    onLayoutChange: PropTypes.func,\n  };\n\n  state = {\n    activeNotes: this.props.activeNotes || [],\n  };\n\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (\n      prevProps.activeNotes !== this.props.activeNotes &&\n      this.state.activeNotes !== this.props.activeNotes\n    ) {\n      this.setState({\n        activeNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  handlePlayNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onPlayNoteInput) {\n        this.props.onPlayNoteInput(midiNumber, { prevActiveNotes: prevState.activeNotes });\n      }\n\n      // Don't append note to activeNotes if it's already present\n      if (prevState.activeNotes.includes(midiNumber)) {\n        return null;\n      }\n      return {\n        activeNotes: prevState.activeNotes.concat(midiNumber),\n      };\n    });\n  };\n\n  handleStopNoteInput = (midiNumber) => {\n    this.setState((prevState) => {\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onStopNoteInput) {\n        this.props.onStopNoteInput(midiNumber, { prevActiveNotes: this.state.activeNotes });\n      }\n      return {\n        activeNotes: prevState.activeNotes.filter((note) => midiNumber !== note),\n      };\n    });\n  };\n\n  render() {\n    const { activeNotes, onPlayNoteInput, onStopNoteInput, ...otherProps } = this.props;\n    return (\n      <ControlledPiano\n        activeNotes={this.state.activeNotes}\n        onPlayNoteInput={this.handlePlayNoteInput}\n        onStopNoteInput={this.handleStopNoteInput}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Piano;\n","import MidiNumbers from './MidiNumbers';\n\nfunction createKeyboardShortcuts({ firstNote, lastNote, keyboardConfig }) {\n  let currentMidiNumber = firstNote;\n  let naturalKeyIndex = 0;\n  let keyboardShortcuts = [];\n\n  while (\n    // There are still keys to be assigned\n    naturalKeyIndex < keyboardConfig.length &&\n    // Note to be assigned does not surpass range\n    currentMidiNumber <= lastNote\n  ) {\n    const key = keyboardConfig[naturalKeyIndex];\n    const { isAccidental } = MidiNumbers.getAttributes(currentMidiNumber);\n    if (isAccidental) {\n      keyboardShortcuts.push({\n        key: key.flat,\n        midiNumber: currentMidiNumber,\n      });\n    } else {\n      keyboardShortcuts.push({\n        key: key.natural,\n        midiNumber: currentMidiNumber,\n      });\n      naturalKeyIndex += 1;\n    }\n    currentMidiNumber += 1;\n  }\n  return keyboardShortcuts;\n}\n\nexport default {\n  create: createKeyboardShortcuts,\n  // Preset configurations\n  BOTTOM_ROW: [\n    { natural: 'z', flat: 'a', sharp: 's' },\n    { natural: 'x', flat: 's', sharp: 'd' },\n    { natural: 'c', flat: 'd', sharp: 'f' },\n    { natural: 'v', flat: 'f', sharp: 'g' },\n    { natural: 'b', flat: 'g', sharp: 'h' },\n    { natural: 'n', flat: 'h', sharp: 'j' },\n    { natural: 'm', flat: 'j', sharp: 'k' },\n    { natural: ',', flat: 'k', sharp: 'l' },\n    { natural: '.', flat: 'l', sharp: ';' },\n    { natural: '/', flat: ';', sharp: \"'\" },\n  ],\n  HOME_ROW: [\n    { natural: 'a', flat: 'q', sharp: 'w' },\n    { natural: 's', flat: 'w', sharp: 'e' },\n    { natural: 'd', flat: 'e', sharp: 'r' },\n    { natural: 'f', flat: 'r', sharp: 't' },\n    { natural: 'g', flat: 't', sharp: 'y' },\n    { natural: 'h', flat: 'y', sharp: 'u' },\n    { natural: 'j', flat: 'u', sharp: 'i' },\n    { natural: 'k', flat: 'i', sharp: 'o' },\n    { natural: 'l', flat: 'o', sharp: 'p' },\n    { natural: ';', flat: 'p', sharp: '[' },\n    { natural: \"'\", flat: '[', sharp: ']' },\n  ],\n  QWERTY_ROW: [\n    { natural: 'q', flat: '1', sharp: '2' },\n    { natural: 'w', flat: '2', sharp: '3' },\n    { natural: 'e', flat: '3', sharp: '4' },\n    { natural: 'r', flat: '4', sharp: '5' },\n    { natural: 't', flat: '5', sharp: '6' },\n    { natural: 'y', flat: '6', sharp: '7' },\n    { natural: 'u', flat: '7', sharp: '8' },\n    { natural: 'i', flat: '8', sharp: '9' },\n    { natural: 'o', flat: '9', sharp: '0' },\n    { natural: 'p', flat: '0', sharp: '-' },\n    { natural: '[', flat: '-', sharp: '=' },\n  ],\n};\n"],"names":["SORTED_PITCHES","ACCIDENTAL_PITCHES","PITCH_INDEXES","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","MIDI_NUMBER_C0","MIN_MIDI_NUMBER","MAX_MIDI_NUMBER","NOTE_REGEX","NOTES_IN_OCTAVE","fromNote","note","Error","match","exec","toLowerCase","_match","_slicedToArray","letter","accidental","octave","pitchName","concat","toUpperCase","pitchIndex","parseInt","buildMidiNumberAttributes","midiNumber","Math","floor","isAccidental","includes","buildMidiNumberAttributesCache","range","reduce","cache","midiNumberAttributesCache","getAttributes","attrs","NATURAL_MIDI_NUMBERS","filter","Key","_React$Component","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","_defineProperty","props","onPlayNoteInput","onStopNoteInput","_inherits","_createClass","key","value","getAbsoluteKeyPosition","OCTAVE_WIDTH","_MidiNumbers$getAttri","MidiNumbers","pitchPosition","pitchPositions","octavePosition","getRelativeKeyPosition","noteRange","first","getLayout","layout","render","_this$props","naturalKeyWidth","accidentalWidthRatio","gliss","useTouchEvents","active","disabled","children","left","ratioToPercentage","width","exportLayout","React","createElement","className","classNames","style","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","onTouchCancel","onTouchEnd","Component","PropTypes","number","isRequired","bool","func","object","node","ratio","Keyboard","updateMidiKeys","getMidiNumbers","last","getNaturalKeyCount","getNaturalKeyWidth","getWidth","getHeight","keyWidth","keyWidthToHeight","componentDidMount","onLayoutChange","resizeObserver","ResizeObserver","measureKeys","bind","observe","keyboardRef","current","componentWillUnmount","disconnect","componentDidUpdate","prevProps","_this2","tempMidiKeys","isChange","arraysEqual","midiKeys","createRef","keyRefs","forEach","_this3","layouts","map","keyComponent","_this4","ref","height","_MidiNumbers$getAttri2","isActive","activeNotes","renderNoteLabel","noteRangePropType","arrayOf","string","arr1","arr2","i","isNaturalMidiNumber","propName","componentName","_props$propName","ControlledPiano","isMouseDown","_ref","prevActiveNotes","nextActiveNotes","notesStopped","difference","notesStarted","playNote","stopNote","keyboardShortcuts","shortcut","find","sh","event","ctrlKey","metaKey","shiftKey","getMidiNumberForKey","setState","_ref2","keyboardShortcut","getKeyForMidiNumber","window","addEventListener","onKeyDown","onKeyUp","removeEventListener","prevState","handleNoteChanges","state","shape","_ref3","Piano","otherProps","_objectWithoutProperties","_excluded","_extends","handlePlayNoteInput","handleStopNoteInput","createKeyboardShortcuts","firstNote","lastNote","keyboardConfig","currentMidiNumber","naturalKeyIndex","push","flat","natural","create","BOTTOM_ROW","sharp","HOME_ROW","QWERTY_ROW"],"mappings":"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"}